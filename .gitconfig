[user]
    name = Mike Parent
    email = mparent@umich.edu
[core]
    excludesfile = ~/.gitignore_global
    pager = cat
	attributesfile = ~/.gitattributes
[color]
    branch = auto
    diff = auto
    status = auto
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = cyan
[color "status"]
    added = cyan
    changed = yellow
    untracked = red
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[alias]
    co = checkout
    # Undo all unstaged modifications
    revertall = git checkout -- .

    nb = checkout -b
    br = branch
    # List of branches by date modified
    # TODO: Fixed width columns
    brd = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset)) - %(contents:subject) - %(authorname)'
    # List merged/unmerged branches
    brm = branch --merged
    brnm = branch --no-merged

    ci = commit
    ca = commit -a
    cm = commit -m

    # Short status lines
    st = status -sb

    # Pretty looking log
    ls = log --reverse --pretty=format:"%C(yellow)%h\\ %C(green)%ad\\ %C(blue)%<(14)%cn\\ %C(red)%d%C(reset)\\ %s" --decorate --date=relative --max-count=100
    ld = log --reverse --pretty=format:"%C(yellow)%h\\ %C(green)%ai\\ %C(blue)%<(14)%cn\\ %C(red)%d%C(reset)\\ %s" --decorate --date=short --max-count=100 
    # List commits showing changed files
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    # List w/o colors (for Unix pipes)
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"

    # Update all submodules
    upsub = submodule foreach git pull

    # List aliases
    la = "!git config -l | grep alias | cut -c 7-"

    # Push everything including all submodules
    pushall = push --recurse-submodules=on-demand

    # Undo, edit + recommit last commit (for 'Ooops I didn't mean to commit yet')
    # http://stackoverflow.com/a/927386
    # 1) First do this:
    undoci = reset --soft 'HEAD^'
    # 2) edit / add
    # 3) Recommit via:
    redoci = commit -c ORIG_HEAD

    # Reset
    r = reset
    r1 = reset HEAD^
    r2 = reset HEAD^^
    rh = reset --hard
    rh1 = reset HEAD^ --hard
    rh2 = reset HEAD^^ --hard

    # Find file path
    f = "!git ls-files | grep -i"

    # Grep
    grep = grep -Ii
    gr = grep -Ii
    grephist = "!git rev-list --all | xargs git grep"

    # Show modified files in last commit
    dl = "!git ll -1"
    dlc = diff --cached HEAD^

    # DirDiff
    dd = difftool --dir-diff

    # Show top stash changes
    diffstash = stash show -p stash@{0}

    # Diff last commit
    difflast = diff HEAD^..HEAD
    ddlast = dd HEAD^..HEAD

    # Housekeeping - delete stale remote-tracking branches
    # TODO: Add more stuff to this commend?
    # Note: could also do "git fetch -p"
    cleanup = remote prune origin

    # Repo Info
    rso = remote show origin

[pull]
    rebase = true
[push]
	default = simple
[merge]
	tool = fugitive
;[diff]
;    tool = vimdiff
[difftool]
    # Stop vim prompting about launching vimdiff
    prompt = false
[diff]
    tool = default-difftool
;[difftool]
;    prompt = false
[difftool "default-difftool"]
    cmd = vim -f '+next' '+execute \"DirDiff\" argv(1) argv(0)' $REMOTE $LOCAL

[mergetool "fugitive"]
	cmd = vim -f -c \"Gdiff\" \"$MERGED\"
[diff "excel"]
	command = ~/util/xldiff.py
